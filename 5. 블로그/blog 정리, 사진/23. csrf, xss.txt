1. xss 
    - java script 공격.
    - 만약, 블로그를 만들었는데 글 쓰는 제목란에 <script> for() </script>와 같이 java script를 사용하여 for 구문을 적는다면 수만개의 게시글이 생겨나며 에러가 발생할 것이다.
        이것을 java script 공격이라고 하며, 이런 공격을 막기 위해서는 <>, script 등의 문자를 적지 못하게 막으면 된다.(lucy 필터 사용)

  csrf
    - 만약, http://naver.com/admin/point?id=aaa&point=5000과 같은 주소를 들어가게 된다면 네이버에서 포인트가 쌓인다고 가정하자.
        이러한 주소는 시큐리티에서 /admin/**과 같이 ADMIN 권한으로 관리를 하게 된다.

        이때, 누군가가 관리자에게 질문과 함께 하이퍼링크(http://naver.com/admin/point?id=aaa&point=5000) 남기고 관리자가 그 주소에 들어가게 된다면 포인트가 넘어가게 된다.

        이러한 상황을 막기 위해서는 이런 요청을 Get 방식이 아닌 Post 방식으로 하여야 한다.
        추가로 Referrer 검증을 통하여 같은 도메인 상에서 요청이 들어오지 않는다면 차단하도록 한다.

    - 위의 방식 말고도 csrf 방식이 존재하는데 
        이것은 랜덤한 수를 사용자의 세션에 저장하여 사용자의 모든 요청(request)에 대하여 서버단에서 검증하는 방법이다.(사진 1번)

2. 저번 시간(21. 스프링 시큐리티(로그인 페이지))에 csrf를 건 이유
    form 태그를 통하여 정보를 요청하는 것이 아니라 id 값을 이용하여 정보를 들고 오게 된다.
    이 상태에서 java script의 ajax를 통해 요청을 하게 되는데 이곳에는 csrf 토큰이 존재하지 않는다.(때문에 시큐리티에서 요청을 거부하게 되고 crsf 토큰을 비활성화 시킨 것이다.)

    즉, 테스트가 완료되면 csrf 설정을 추가하여 다시 csrf 토큰을 활성화 해야한다.