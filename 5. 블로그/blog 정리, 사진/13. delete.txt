1. delete
    delete를 사용하기 위해서 사진 1번과 같이 @DeleteMapping을 사용한다.

    저장된 데이터를 delete하기에 앞서 존재하지 않는 id를 사용하여 delete를 시도해보면 사진 2번과 같이 에러가 발생한다.
    이러한 이유로 인해 UserRepositroy.deleteById(id);만을 사용하기에 위험하기 때문에 사진 3번과 같이 try 구문을 사용하게 되면 사진 4번과 같은 에러 메시지를 볼 수 있다.
        이 문제를 해결하기 위해서는 try 구문의 IllegalArgumentException부분에 EmptyResultDataAccessException를 넣어주면 된다.(사진 5번)
        이후 send를 하게되면 사진 6번과 같이 에러 없이 존재하지 않는 id라는 메시지를 반환받을 수 있다.
            (만약, 에러를 잡는 부분에서 문제가 생긴다면 모든 에러를 감지하는 Exception을 사용하여도 된다.)

    이제 기존에 존재했던 데이터의 삭제를 실행해보면 사진 8번과 같이 return을 받을 수 있고, 사진 7번의 데이터 베이스에서 사진 9번과 같이 값이 삭제된 것을 확인할 수 있다.