1. 연산자(演펴다연 算계산산 子, operator)란 특정한 작업을 하기 위해서 사용하는 기호를 의미한다. 작업의 종류에 따라서 대입 연산자, 산술 연산자, 비교 연산자, 논리 연산자 등이 있다. 

2. 산술 연산자 :산술(算셈산 術재주술, Arithmetic)연산자는 수학적인 계산에 사용되는 연산자다. 기초적인 수학적 소양이 있다면 어려운 연산자는 없다. 
 다만 수학에서 사용하는 연산자와 프로그래밍에서 사용하는 연산자는 기호의 모양이 조금 다르다.(연산자(사진) 파일의 1번 사진)
    
    2-1. java에서 나누기('/')는 python의 나누기('/')와 다르다.
        python에서는 '/' 기호를 사용하면 몫만을 가져오는 반면, java에서는 '/' 기호를 사용하면 말 그대로 나누기를 실행한다.
        다만, 2번 사진과 같이 데이터의 형이 중요한데 int로 정의된 a와 b를 나누웠을 때는 그 결과가 같은 int로 나오기 때문에 나머지를 버린 3을 반환한다.
        반면에, float으로 정의된 c와 d를 나누게 되면 같은 float의 형태인 3.3333...을 반환하게 된다.
        마찬가지로 int인 a와 float인 d를 나누게 된다면 자동 형변환의 규칙에 따라 범위가 좁은 int a의 형이 float으로 변환되며 결과도 3.3333...으로 float의 형태를 가지게 된다.

3. 단항 연산자 : 1+2에서 사용한 연산자 +는 이항(二두이 項항목항, infix operator) 연산자이고, 좌항인 1과 우항인 2를 더해주는 작업을 하고 있다.
  단항(單홑단 項항목항, unary) 연산자는 하나의 항을 대상으로 연산이 이루어지는 연산자이다.(사진 3번)

  3-1. 단항 연산자의 '++'는 값이 1 증가함을 뜻한다. 다만, '++'의 위치가 상수의 앞, 뒤 중 어느곳에 위치하느냐에 따라 작동 순서가 다르다.
      사진 4번을 보면 '++i'의 출력은 6으로 println()이 동작하기 전에 i에 +1이 되었지만, 'i++'의 경우, println()이 동작하고 난 이후에 +1이 적용되는 것을 확인할 수 있다.

4. Boolean : 불린(Boolean)은 참과 거짓을 의미하는 데이터 타입으로 bool이라고도 부른다. 불린은 정수나 문자와 같이 하나의 데이터 타입인데, 참을 의미하는 true와 거짓을 의미하는 false 두 가지의 값을 가지고 있다. 

5. java에서 '같다'를 표현하는 비교 연산자는 '=='이다.(사진 5번) 또한, '아니다'를 표현하는 비교 연산자는 '!='이다.(사진 6번)
 두 데이터의 크기 비교는 <, >, <=, >=로 다른 것과 똑같이 사용된다.(결과는 True, False로 반환한다. 사진 7번)

 * 문자열을 비교할 때는 .equals 메소드를 사용한다.(사진 8번) 
  저장하는 방식은 다르지만 같은 문자열을 사용한다 하여도 '=='을 사용하면 False를 반환하는 대신 문자열 비교 메소드인 .equals를 사용한다면 True를 반환한다.(new String은 뒤에서 알아보도록 하자.)