1. 생성자는 객체를 생성한다. 그 과정에서 해야할 일들을 생성자 메소드에 지정해서 초기화 작업을 할 수 있다. 상속과 생성자(사진)의 1-1번 사진은 오류를 발생시키지 않는다.
 그러나 사진 1-2번은 오류를 발생시킨다. (public ConstructorDemo(int param1) {} 처럼 () 안에 매개변수를 입력했기 때문이다. 이런 상태에서는 java가 기본 생성자를 선언해주지 않는다.)

 이런 문제를 해결하기 위해서는 사진 1-3번처럼 인자가 없는 기본 생성자를 명시적으로 선언해주어야 한다.

2. 사진 2-1번을 보면 class Calculator의 기본 생성자가 자동으로 만들어지기 때문에 하위 생성자에 상속을 시켜도 문제가 발생하지 않는 것을 볼 수 있다.
 하지만 사진 2-2번처럼 class Calculator에 public Calculator(int left, int right)으로 매개변수를 이용할 경우 에러가 발생하는 것을 볼 수 있다.
 이 문제를 해결하기 위해서는 사진 2-3번과 같이 public Calculator() {}를 추가하면 된다.

 그런데 코드를 살펴보면 상위 클래스 Calculator와 하위 클래스 SubstractionableCalculator에서 this.left = left; this.right = right; 부분이 겹치는 것을 확인할 수 있다.
 이렇게 된다면 코드가 꼬일 가능성이 있으며 이런 문제를 해결하기 위한 것이 super를 사용하는 것이다.(사진 2-4번)
 super 키워드는 부모 클래스를 의미한다. 여기에 ()붙이면 부모 클래스의 생성자를 의미하게 된다. 이렇게 하면 부모 클래스의 기본 생성자가 없어져도 오류가 발생하지 않는다.

 하위 클래스의 생성자에서 super를 사용할 때 주의할 점은 super가 가장 먼저 나타나야 한다는 점이다. 즉 부모가 초기화되기 전에 자식이 초기화되는 일을 방지하기 위한 정책이라고 생각하자.
