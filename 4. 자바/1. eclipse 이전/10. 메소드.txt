1. java의 메소드(method)는 python의 함수(function)이라고 할 수 있다. 메소드는 지금까지 사용했던 java 코드의 기본적인 형태라고 말 할 수 있을 것이다.
 (메소드(사진) 사진 1번)을 보면 계속해서 사용해왔지만, 정확한 의미를 모르고 있던 public static void main(String[] args) 부분임을 알 수 있다. 이 중에서도 메소드라 불리는 부분은 'void main(String[] args)'이다.

2. 직접 메소드를 만드는 것을 정의라고 하고, 만들어진 메소드를 실행하는 것을 호출이라고 한다.
 사진 2번과 같이 main 메소드가 실행되면(메소드를 호출하면) 위에서 정의한 numbering 메소드가 실행되는 것을 볼 수 있다.
    - 기본적으로 '메소드명()' 뒤편에 중괄호('{  }')가 들어가게 된다면 메소드를 정의하는 것이고, '메소드명()' 뒤편에 중괄호가 아닌 세미콜론(';')이 온다면 호출을 뜻하게 된다.

3. 그렇다면 모든 메소드에 항상 등장하는 main은 무엇일까? 
 main 메소드는 규칙이다. 만들고 싶은 프로그램이 있다면 반드시 public static void main(String[] args)가 이끄는 중괄호 안에 실행되기를 기대하는 로직을 위치시켜야 한다.
 이것은 약속이기 때문에 지켜야만 하는 규칙이다. 즉, 코드를 실행했을 때, java는 main 메소드를 찾아 실행시킨다는 말이 된다.

4. 메소드를 사용한다면 코드를 재활용하여 코드의 수를 줄일 수 있고 유지보수를 더 효율적으로 할 수 있게된다.

5. 메소드의 입력 값은 매개변수(parameter)를 통해서 이루어진다. 
 사진 3번을 보면 사진 2번에서 public static void numbering()의 () 안에 int limit를 추가한 코드이다. 이런 식으로 입력값을 받을 수 있게 된다면, main 메소드에서 numbering() 메소드를 불러올 때, () 안에 원하는 조건을 입력할 수 있게 된다.
 이때 사용되는 'int limit'를 매개변수(parameter)라고 한다.(입력값을 수용하기 위한 변수)
 또한, 매개변수를 받아 사용하기 위해 main 메소드에서 numbering(5)처럼 사용할 때 () 안의 입력되는 값을 인자(argument)라고 한다.(실제 사용할 때는 매개변수와 인자를 혼용하여 부른다.)

6. 이러한 매개변수(혹은 인자)는 하나만 받을 수 있는 것이 아니라 둘 이상도 받아서 사용할 수 있다.(사진 4번)

7. 메소드의 출력은 return을 사용한다.(사진 5번)

8. public static void main(String[] args)처럼 메소드를 정의하는데 void는 String, int와 같이 데이터의 타입을 명시해주는 역할을 한다. 즉, void는 main 메소드의 데이터 타입이 비어있는, 쉽게 말해 무엇든 될 수 있는 타입이라는 뜻이된다.
 다시 말해, 지금까지 void를 사용했기 때문에 굳이 return을 사용하지 않고 있었지만, return이 사용된다면 메소드를 정의할 때, 반드시 메소드의 타입을 정확히 명시해줘야 한다.

9. 굳이 이렇게 복잡하게 데이터를 리턴하는 이유는 무엇일까? 내용을 화면에 출력하는 것은 동일하지 않은가? 결론적으로 말하면 부품으로서의 가치를 높이기 위해서라고 할 수 있다.
 만약, 메소드가 출력한 값을 화면에 출력하는 것이 아니라 파일에 기록하고 싶다면 어떻게 해야 할까? 이 상황에서는 return을 사용하지 않으면 불가능하게 된다.
 
 사진 6번과 같이 return을 잘 활용하면 eclipse의 console창에만 결과를 띄우는 것이 아니라 다른 파일로 저장을 할 수도 있다.