1. while문 : while(조건(언제까지)) { 반복 실행 영역(반복 작업) } 의 형태를 이룬다.(반복문(사진) 사진 1번)
 만약 while문 () 안에 false가 들어가게 된다면 java는 작동되지 않을 코드임을 알려준다.(사진 1-2번)
 () 안에 하드코딩(True or False)가 아닌 조건을 넣으면 사진 1-3번과 같다.

2. for문 : while문을 보면 반복의 횟수를 지정하기 위해서 while문 외부에 변수 i의 값을 초기화하고, while문 안에서 i의 값을 증가시키고 있다. 이것은 코드를 산만하게 할 수 있다.
 반복문에서 자주 사용하는 이러한 패턴을 문법적인 형태로 만든 것이 for문이다. for문은 특정한 횟수만큼 반복 실행을 하는 경우에 자주 사용된다. 하지만 for문이나 while문이나 서로 대체 가능하다.

 for문은 for(초기화; 종료조건; 반복실행) { 반복적으로 실행될 구문 } 의 형태를 이룬다.(사진 2번 / while문과 비슷하다는 것을 알 수 있다.)

3. 반복문에서 특정 조건을 만족하여 멈추고 싶다면 break를 사용하면 된다.(사진 3번)
 반대로 특정 조건을 무시하고 반복문을 진행시키기 위해서는 continue를 사용하면 된다.(사진 4번)

4. 반복문 안에 반복문을 사용하여 중첩시킬 수 있다.(사진 5번)